Use Bike;
-- 1. What is the total sales amount generated by each store?
SELECT s.store_name, SUM(oi.quantity * (oi.list_price - oi.discount)) AS total_sales
FROM order_items oi
JOIN orders o ON oi.order_id = o.order_id
JOIN stores s ON o.store_id = s.store_id
GROUP BY s.store_name
ORDER BY total_sales DESC;

-- 2. How do monthly sales figures change over time?
SELECT YEAR(o.order_date) AS year, MONTH(o.order_date) AS month, SUM(oi.quantity * (oi.list_price - oi.discount)) AS monthly_sales
FROM order_items oi
JOIN orders o ON oi.order_id = o.order_id
GROUP BY YEAR(o.order_date), MONTH(o.order_date)
ORDER BY year, month;

-- 3. Which five products have generated the highest sales?
SELECT p.product_name, SUM(oi.quantity * (oi.list_price - oi.discount)) AS total_sales
FROM order_items oi
JOIN products p ON oi.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_sales DESC
LIMIT 5;

-- 4. How are total sales distributed across different product categories?
SELECT c.category_name, SUM(oi.quantity * (oi.list_price - oi.discount)) AS category_sales
FROM order_items oi
JOIN products p ON oi.product_id = p.product_id
JOIN categories c ON p.category_id = c.category_id
GROUP BY c.category_name
ORDER BY category_sales DESC;

-- 5. What is the total sales amount contributed by each brand?
SELECT b.brand_name, SUM(oi.quantity * (oi.list_price - oi.discount)) AS brand_sales
FROM order_items oi
JOIN products p ON oi.product_id = p.product_id
JOIN brands b ON p.brand_id = b.brand_id
GROUP BY b.brand_name
ORDER BY brand_sales DESC;

-- 6. How much discount has been given on each product overall?
SELECT p.product_name, SUM(oi.quantity * oi.discount) AS total_discount
FROM order_items oi
JOIN products p ON oi.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_discount DESC;

-- 7. How many orders fall under each order status category?
SELECT order_status, COUNT(*) AS total_orders
FROM orders
GROUP BY order_status;

-- 8. Which cities or states have placed the highest number of orders?
SELECT cu.city, cu.state, COUNT(o.order_id) AS total_orders
FROM orders o
JOIN customers cu ON o.customer_id = cu.customer_id
GROUP BY cu.city, cu.state
ORDER BY total_orders DESC;

-- 9. Which staff members have generated the most revenue through their sales?
SELECT CONCAT(s.first_name, ' ', s.last_name) AS staff_name, SUM(oi.quantity * (oi.list_price - oi.discount)) AS total_sales
FROM order_items oi
JOIN orders o ON oi.order_id = o.order_id
JOIN staffs s ON o.staff_id = s.staff_id
GROUP BY s.staff_id
ORDER BY total_sales DESC;

-- 10. What is the average order value for each customer?
SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer_name, AVG(oi.quantity * (oi.list_price - oi.discount)) AS avg_order_value
FROM order_items oi
JOIN orders o ON oi.order_id = o.order_id
JOIN customers c ON o.customer_id = c.customer_id
GROUP BY c.customer_id
ORDER BY avg_order_value DESC;

-- 11. What is the current stock quantity available for each product?
SELECT p.product_name, SUM(s.quantity) AS total_stock
FROM stocks s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_stock ASC;

-- 12. How do stock levels vary across different stores?
SELECT st.store_name, p.product_name, s.quantity
FROM stocks s
JOIN stores st ON s.store_id = st.store_id
JOIN products p ON s.product_id = p.product_id
ORDER BY st.store_name, s.quantity DESC;

-- 13. How many products are associated with each brand?
SELECT b.brand_name, COUNT(p.product_id) AS product_count
FROM products p
JOIN brands b ON p.brand_id = b.brand_id
GROUP BY b.brand_name
ORDER BY product_count DESC;

-- 14. How many products are there in each product category?
SELECT c.category_name, COUNT(p.product_id) AS product_count
FROM products p
JOIN categories c ON p.category_id = c.category_id
GROUP BY c.category_name
ORDER BY product_count DESC;

-- 15. How does the list price of products vary by model year?
SELECT model_year, AVG(list_price) AS avg_price, MIN(list_price) AS min_price, MAX(list_price) AS max_price
FROM products
GROUP BY model_year
ORDER BY model_year;

-- 16. How many orders has each customer placed?
SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer_name, COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY total_orders DESC;

-- 17. Who are the top ten customers in terms of total purchase amount?
SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer_name, SUM(oi.quantity * (oi.list_price - oi.discount)) AS total_spent
FROM order_items oi
JOIN orders o ON oi.order_id = o.order_id
JOIN customers c ON o.customer_id = c.customer_id
GROUP BY c.customer_id
ORDER BY total_spent DESC
LIMIT 10;

-- 18. How are customers distributed across different states?
SELECT state, COUNT(customer_id) AS total_customers
FROM customers
GROUP BY state
ORDER BY total_customers DESC;

-- 19. How many customers are new versus returning?
SELECT customer_type, COUNT(*) AS customer_count FROM (
    SELECT customer_id, 
        CASE 
            WHEN COUNT(order_id) = 1 THEN 'New' 
            ELSE 'Returning' 
        END AS customer_type
    FROM orders
    GROUP BY customer_id
) AS sub
GROUP BY customer_type;

-- 20. How many sales have been handled by each staff member?
SELECT CONCAT(s.first_name, ' ', s.last_name) AS staff_name, COUNT(o.order_id) AS total_orders
FROM staffs s
JOIN orders o ON s.staff_id = o.staff_id
GROUP BY s.staff_id
ORDER BY total_orders DESC;

-- 21. How many staff members are currently active versus inactive?
SELECT CASE WHEN active = 1 THEN 'Active' ELSE 'Inactive' END AS status, COUNT(*) AS staff_count
FROM staffs
GROUP BY active;

-- 22. How many staff members are assigned to each store?
SELECT st.store_name, COUNT(s.staff_id) AS staff_count
FROM staffs s
JOIN stores st ON s.store_id = st.store_id
GROUP BY st.store_name
ORDER BY staff_count DESC;
